#References:

#spring.main.banner-mode=off 
spring.output.ansi.enabled=always
#********************************************************************************************************************************
### Server port #########
		server.port=8081
		
#********************************************************************************************************************************
server.application.name=springboot_springwebmvc_jsp_war_demo

#********************************************************************************************************************************
#MVC (This is alternate to WebMvcConfig.java , so there is no need WebMvcConfig.java here , we are configuring here)
		
		### Context root / context path for the project ########
		#server.contextPath=/springboot_springwebmvc_Demo_App
		#server.servlet.context-path=/springboot_springwebmvc_Demo_App
		
		spring.mvc.view.prefix=/WEB-INF/jsp/
		spring.mvc.view.suffix=.jsp
		
		#For form validation messages
		spring.messages.basename=messages
		
		# Here static folder which contains js,css,images files is inside src/main/resources folder.
		spring.mvc.static-path-pattern=/resources/**
		
		#removes whitable error
		server.error.whitelabel.enabled=false
		
		#Default Custom Error Page(error.jsp) configuration for bad request
		
		server.error.include-stacktrace=always
		
#********************************************************************************************************************************
		#spring.resources.cache-period=10
		
#**********************************************************************************************************************************
#DataSource Configuration (This is alternate to SpringJdbcConfig.java , so there is no need of  DataSourceConfig.java)
   #H2 DB - A in memory DB.
   		
   		#Way-1 , Here we must to use DataSourceConfig.java to create dataSource object.
   		#jdbc.datasource.driverClassName=org.h2.Driver
		#jdbc.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
		#jdbc.datasource.username=sa
		#jdbc.datasource.password=
		
   		#OR
   		
   		#way-2, Here we must not to use DataSourceConfig.java to create dataSource object. Just autowire whereever necessary.
		#spring.datasource.driverClassName=org.h2.Driver
		#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
		#spring.datasource.username=sa
		#spring.datasource.password=
		
		#spring.datasource.platform=h2
		spring.h2.console.enabled=true
		#Lunch h2 console: http://localhost:8081/h2-console
		#spring.h2.console.path=/h2-console
		#spring.h2.console.settings.trace=false
		#spring.h2.console.settings.web-allow-others=false
		#spring.h2.console.enabled=true
		#Lunch h2 console: http://localhost:8081/h2-console
		
		#spring.datasource.tomcat.max-wait=20000
		#spring.datasource.tomcat.max-active=10
		#spring.datasource.tomcat.max-idle=5
		#spring.datasource.tomcat.min-idle=3
		
		spring.datasource.hikar.connection-timeout=20000
		spring.datasource.hikar.maximum-pool-size=20
		
		# Here second datasource, if needed
		#spring.secondDatasource.driver-class-name=org.h2.Driver
		#spring.secondDatasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
		#spring.secondDatasource.username=sa
		#spring.secondDatasource.password=
		#Lunch h2 console: http://localhost:8081/h2-console
		
		#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
	
	#HSQL  - A in memory DB
		#way-1,Here we must  to use DataSourceConfig.java
		#jdbc.datasource.driverClassName=org.hsqldb.jdbc.JDBCDriver
		#jdbc.datasource.url=jdbc:hsqldb:mem:myDb
		#jdbc.datasource.username=sa
		#jdbc.datasource.password=
		#hibernate.dialect=org.hibernate.dialect.HSQLDialect
		# Enabling HSQL Console
		#spring.hsql.console.enabled=true
		#Lunch hsql console: http://localhost:8081/hsql-console
		
		#OR
		
		#way-2, Here we must not to use DataSourceConfig.java
		#spring.datasource.driverClassName=org.hsqldb.jdbc.JDBCDriver
		#spring.datasource.url=jdbc:hsqldb:mem:myDb
		#spring.datasource.username=sa
		#spring.datasource.password=
		# Enabling HSQL Console
		#spring.hsql.console.enabled=true
		#Lunch hsql console: http://localhost:8081/hsql-console
	
	#Apache derby - A in memoy DB
		#Way-1
		#jdbc.datasource.driverClassName=org.apache.derby.jdbc.EmbeddedDriver
		#jdbc.datasource.url=jdbc:derby:memory:myDb;create=true
		#jdbc.datasource.username=sa
		#jdbc.datasource.password=
		#hibernate.dialect=org.hibernate.dialect.DerbyDialect
		
		#OR
		
		#way-2, Here we must not to use DataSourceConfig.java
		#spring.datasource.driverClassName=org.apache.derby.jdbc.EmbeddedDriver
		#spring.datasource.url=jdbc:derby:memory:myDb;create=true
		#spring.datasource.username=sa
		#spring.datasource.password=
		#hibernate.dialect=org.hibernate.dialect.DerbyDialect
	
	#SQL Lite - A in memory DB
		#way-1
		#jdbc.datasource.driverClassName=org.sqlite.JDBC
		#jdbc.datasource.url=jdbc:sqlite:memory:myDb
		#jdbc.datasource.username=sa
		#jdbc.datasource.password=sa
		
		#OR
		
		#spring.datasource.driverClassName=org.sqlite.JDBC
		#spring.datasource.url=jdbc:sqlite:memory:myDb
		#spring.datasource.username=sa
		#spring.datasource.password=
		
	#Mysql DB
	
		#way-1
		#jdbc.datasource.driverClassName=com.mysql.jdbc.Driver
		#jdbc.datasource.url=jdbc:mysql://localhost:3306/test
		#jdbc.datasource.username=root
		#jdbc.datasource.password=root
		
		#way-2
		#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
		#spring.datasource.url=jdbc:mysql://localhost:3306/test
		#spring.datasource.username=root
		#spring.datasource.password=root
		#spring.datasource.tomcat.max-wait=20000
		#spring.datasource.tomcat.max-active=10
		#spring.datasource.tomcat.max-idle=5
		#spring.datasource.tomcat.min-idle=3
		
	#PostgreSql DB
		
	#Oracle DB
	#way-1
		#jdbc.datasource.driverClassName=oracle.jdbc.driver.OracleDriver
		#jdbc.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
		#jdbc.datasource.username=SYSTEM
		#jdbc.datasource.password=SYSTEM
		
		#way-2
		#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
		#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
		#spring.datasource.username=SYSTEM
		#spring.datasource.password=SYSTEM
		#spring.datasource.tomcat.max-wait=20000
		#spring.datasource.tomcat.max-active=10
		#spring.datasource.tomcat.max-idle=5
		#spring.datasource.tomcat.min-idle=3
		
	#If you are using JNDI of external servers(Tomcat/jboss/wildfly/weblogic/glassfish/websphere etc.), create and  use context.xml file inside webapp/META-INF folder.
		#Refer: https://www.java4s.com/spring-boot-tutorials/spring-boot-configure-datasource-using-jndi-with-example/
		#spring.datasource.jndi-name=java:comp/env/jdbc/oracle
		#spring.datasource.jndi-name=java:comp/env/jdbc/mysql
		
		#Mysql DB configs:
		spring.datasource.driverClassName=com.mysql.jdbc.Driver
		spring.datasource.url=jdbc:mysql://localhost:3306/practice_db
		spring.datasource.username=root
		spring.datasource.password=root
		
#HB/ORM properties:(Use these properties when using HB or spring ORM)
		#hibernate.dialect=org.hibernate.dialect.H2Dialect
		#hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
		#hibernate.show_sql=true
		#hibernate.hbm2ddl.auto=validate
		#entitymanager.packagesToScan=com.springboot.entity
		
#JPA Properties
		spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
		#spring.jpa.properties.hibernate.hbm2ddl.auto = validate
		spring.jpa.properties.hibernate.ddl-auto=validate
		spring.jpa.properties.hibernate.show_sql = true
		spring.jpa.properties.hibernate.format_sql = false
		spring.jpa.properties.hibernate.id.new_generator_mappings = false

#***************************************************************************************************************************************		
#Security Configurations

#***************************************************************************************************************************************	
#Logging Configuration